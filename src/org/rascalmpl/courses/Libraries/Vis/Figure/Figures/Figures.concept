# Figures

.Synopsis
Overview of all figures.

.Syntax

.Types

*  `Figure`
*  `alias Figures = list[Figure];`

.Function

.Details

.Description
`Figure` is the primary data type that represents figures. A list of figures is represented by the type `Figures`.
Figures can be classified as follows:

*  __Atomic Figures__: indivisible figures such as [$Figures/text] and [$Figures/outline].
*  __Containers__: most figures may act as containers for other figures. For example, a [box] and [ellipse] may contain 
  an arbitrarily complex subfigure.
*  __Compositions__: serve to combine figures into new figures. Examples are horizontal ([hcat]) or vertical ([vcat]) concatenation 
  or placement of figures in a <<grid>>, <<Figures-graph>> or <<Figures-tree>>.
*  __Transformations__: perform geometric transformations on a given figure.
*  __Interaction__: provide interaction with the user, see [computeFigure], [fswitch], [button], [textfield], [combo],
  <<checkbox>>, <<scaleSlider>>,<<scrollable>>, <<hscrollable>> and <<vscrollable>>.

.Examples

.Benefits

.Pitfalls
We are cheating a bit with the above data declaration for Figure. 
The current version of Rascal does not yet support data constructors with a variable number of arguments as needed
for the properties. At the moment, the above constructors are provided as Rascal functions that can
have variable arguments, see <<Function Declaration>>.

