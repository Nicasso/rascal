# figure

.Synopsis

Markup of code that generates a figure.

.Syntax

*  `<figure $FileName$> $RascalCode$ </figure>`
*  `<figure $FileName$ $Width$x$Height$> $RascalCode$ </figure>`

.Types

.Function

.Details

.Description
With figure markup it is possible to execute visualizations and to include their output in the text.
_FileName_ is the name of the file to which the visualization will be saved.
It can later be inserted as <<Image>>.
Optionally, _Width_ and _Height_ can be given that define the size of the resulting figure.
By default, the minimal size of the figue is used.

Before executing the Rascal code, the following two imports are added automatically:
[source,rascal]
----
import vis::Figure;
import vis::Render;
----

.Examples
The input:

`<figure fig1.png>`<br>
`render(box(fillColor("red")));`<br>
`</figure>`

will save a red box in file `fig1.png` and also produce the listing:

[source,rascal-figure,width=,height=,file=fig1.png]
----
                render(box(fillColor("red")));
----

Later this file can be included as image using: `![fig1](fig1.png)` with as result:

image::{concept}/fig1.png[alt="fig1"]
 

.Benefits

.Pitfalls

*  The last line of the $RascalCode$ should be of the form:
[source,rascal]
----
render(...);
----

*  `<figure>` and `</figure>` should occur at the start of a line.

