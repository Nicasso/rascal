define M1 {module M1 public int x = 0;}

define Y {int y = 1;}

define triple {int triple(int x) = 3 * x;}


test 1 variables { y = _V0; } expect {_T0 y}

test 1 variables { _T0 y = _V0; } expect {_T0 y}

test 1 variables { _T0 _X0 = _V0; y = _V0; } expect {_T0 y}

test 1 variables { _T0 _X0 = _V0; y = _X0; } expect {_T0 y}

test 1 variables {_T0 _X0 = _V0; _T0 y = _X0; } expect {_T0 y}

test 2 variables {_T0 _X0 = _V0; _T1 _X1 = _V1;} expect {_T0 _X0, _T1 _X1}

test 2 variables {_T0 x = _V0; x = _V1; } expect{LUB(_T0,_T1) x}

test 2 variables {x = _V0; x = _V1; } expect{LUB(_T0,_T1) x}

test 1 variables {_T0 _X0 = _V0; if(true) y = _X0; else y = _V0; } expect {_T0 y }

test 0 variables { int x = 1; x = false; } expect {/Unable to bind subject type/}

test 0 variables { use Y :: y; } expect {int y}

test 0 variables { use triple :: triple([1,2,3]); } expect {/cannot be called with argument/}

test 0 variables {int x = 3; y = x + "a";} expect{/Addition not defined/}

test 0 variables {int x = 3; y = x - "a";} expect{/Subtraction not defined/}

test 0 variables { use M1 :: x; } expect {int x}